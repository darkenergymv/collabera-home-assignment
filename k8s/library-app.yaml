apiVersion: apps/v1
kind: Deployment
metadata:
  name: library-app
  namespace: library-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: library-app
  template:
    metadata:
      labels:
        app: library-app
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo "waiting for postgres..."; sleep 2; done;']
      containers:
        - name: library-app
          # --- LOCAL DEVELOPMENT (default) ---
          # Use local Docker image; won't try to pull from registry
          image: library-app:latest
          imagePullPolicy: Never

          # --- FOR GHCR or CI/CD LATER ---
          # When ready for GitHub Actions, comment out above 2 lines
          # and uncomment these:
          # image: ghcr.io/darkenergymv/library-app:latest
          # imagePullPolicy: Always

          ports:
            - containerPort: 8081
          env:
            # use dev profile so the app listens on 8081 (from application-dev.yml)
            - name: SPRING_PROFILES_ACTIVE
              value: dev
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/LibraryDB
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: library-app
  namespace: library-system
spec:
  type: NodePort
  selector:
    app: library-app
  ports:
    - port: 8081
      targetPort: 8081
      nodePort: 30081
